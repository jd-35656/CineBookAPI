services:
  api:
    image: cine_book_api_image-dev:1
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
    ports:
      - 8000:8000
    container_name: cine_book_api_container_dev
    env_file:
      - ../../.env
    volumes:
      - ../../migration/:/app/migration/
    develop:
      watch:
        - path: ../../src/
          action: sync
          target: /app/src/
          ignore:
            - Pipfile
            - Pipfile.lock
        - path: ../../Pipfile
          action: rebuild
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    user: postgres
    container_name: cine_book_db_container_dev
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=cinebook_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: ../../secrets/DBPassword.txt
